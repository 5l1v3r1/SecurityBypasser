#!/bin/bash

version=1.4.2
reldate=2016/08/19

basedir=$(readlink -m "${BASH_SOURCE[0]}")
basedir=$(dirname ${basedir})
rootdir="${PWD}"

_error () {
	echo "${1}"
	exit 1
}

_build () {

	if [[ -f ${1} && ${1} == *.apk ]]; then

		rm -rf "${rootdir}"/build-yokai

		xdelta=$(which xdelta3)
		if [[ ${xdelta} == "" ]]; then
			if [[ $(uname -m) == "x86_64" ]]; then
				xdelta="${basedir}"/patcher/xdelta3.64
			else	xdelta="${basedir}"/patcher/xdelta3.32
			fi
		fi

		source="${1}"
		sourceapk=$(basename "${source}")
		sourcedir=$(basename "${source}" .apk)

		apksign=${basedir}/apksign

		mkdir "${rootdir}"/build-yokai
		cp "${source}" ${rootdir}/build-yokai
		cd "${rootdir}"/build-yokai
		${apktool} ${apktoolparams} \
			d "${sourceapk}" || _error "apktool failed!"

		version=$(gawk '/^  versionName/{print $2}' < "${sourcedir}"/apktool.yml)

		if [[ -d "${basedir}"/delta/com.level5.ywwwus/${version} ]]; then
			patchdir="${basedir}"/delta/com.level5.ywwwus/${version}
		else
			echo -e "\n!! version ${version} is not supported !!\n"
			exit 1
		fi

		for arch in armeabi armeabi-v7a x86; do
			${xdelta} -d -f -s "${sourcedir}"/lib/${arch}/libSGF.so \
				"${patchdir}"/libSGF-${arch}.delta \
				libSGF-mod.so || _error "xdelta3 failed!"

			mv libSGF-mod.so "${sourcedir}"/lib/${arch}/libSGF.so
		done

		${apktool} ${apktoolparams} \
			b "${sourcedir}" \
			-o Yokai-WWWUS-Root_${version}.apk || _error "apktool failed!"

		${apksign} Yokai-WWWUS-Root_${version}.apk || _error "apksign failed!"
		mv Yokai-WWWUS-Root_${version}.s.apk \
			"${rootdir}"/Yokai-WWWUS-Root_${version}.apk || _error "moving output file failed, ${rootdir} not writeable?"

		cd "${rootdir}"
		rm -rf "${rootdir}"/build-yokai

		echo -e "
Modified apk stored as

		${rootdir}/Yokai-WWWUS-Root_${version}.apk

copy to your device and install or issue

		adb install [-r] ${rootdir}/Yokai-WWWUS-Root_${version}.apk

if your device is connected to your computer.
"
	else	_error "file ${1} does not exist."
	fi

}

case ${1} in

	*alt )	apktool=${basedir}/apktool
		apktoolparams="-p ${basedir}/framework"
		_build "${2}"	;;

	*alt2 )	apktool=${basedir}/apktool
		apktoolparams=""
		_build "${2}"	;;

	*.apk )	which apktool &>/dev/null || _error "apktool not installed!"
		apktool=$(which apktool)
		apktoolparams=""
		_build "${1}"	;;

	* )	echo -e "Yokai Watch Wibble Wobble (US) root patcher

version ${version} (${reldate})

supported game versions:
	1.1.1
	1.2.0
	1.2.1
	1.2.2

usage:
	yokai-patcher		<yokaiwatch.apk>
	yokai-patcher	--alt	<yokaiwatch.apk>
	yokai-patcher	--alt2	<yokaiwatch.apk>

option:
	--alt	[use supplied apktool with supplied framework]
	--alt2	[use supplied apktool with default framework]
	--help	[show this message]
"	;;

esac
